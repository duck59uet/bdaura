version: '3.6'
services:
  postgres:
    build:
      context: ./
      dockerfile: ./docker/psql/Dockerfile
    restart: always
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - dev_network
  hasura:
    image: hasura/graphql-engine:v2.0.4
    ports:
      - "8080:8080"
    depends_on:
      - 'postgres'
    restart: always
    environment:
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      ACTION_BASE_URL: "http://localhost:3000"
    networks:
      - dev_network
  aurad:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/aura-nw/bdaura-aurad:${GITHUB_REF_NAME}_${COMMIT_TAG}
    depends_on:
      - 'postgres'
    restart: always
#    command: bdaura parse --home /bdaura/.bdaura
    volumes:
      ## Modify first path to match configuration file.
      - /bdaura/.bdaura:/bdaura/.bdaura
    networks:
      - dev_network

networks:
  dev_network:
